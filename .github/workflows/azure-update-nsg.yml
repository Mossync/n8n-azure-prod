name: Update Azure NSG with GitHub Actions IPs

on:
  workflow_dispatch:
  schedule:
    # Run weekly on Sundays at 1:00 AM UTC to keep GitHub IPs updated
    - cron: '0 1 * * 0'

jobs:
  update-nsg:
    runs-on: ubuntu-latest
    env:
      RESOURCE_GROUP: Mossync-n8n-prod
      NSG_NAME: n8n-vm-nsg
      SSH_RULE_NAME: SSH-GitHub-Actions

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Current GitHub Actions IP Ranges
        run: |
          echo "Fetching current GitHub Actions IP ranges..."
          curl -s https://api.github.com/meta > github_meta.json
          
          # Extract Actions IP ranges and split into groups (Azure NSG limit ~400 per rule)
          cat github_meta.json | jq -r '.actions[]' > github_ips.txt
          
          # Count total IPs
          TOTAL_IPS=$(cat github_ips.txt | wc -l)
          echo "Total GitHub Actions IP ranges: $TOTAL_IPS"
          
          # Split into chunks of 50 IPs per rule (safe limit)
          split -l 50 github_ips.txt ip_chunk_
          
          # Count chunks
          CHUNK_COUNT=$(ls ip_chunk_* | wc -l)
          echo "Will create $CHUNK_COUNT NSG rules"
          echo "CHUNK_COUNT=$CHUNK_COUNT" >> $GITHUB_ENV
          
          # Show sample ranges for logging
          echo "Sample GitHub Actions IP ranges:"
          head -10 github_ips.txt

      - name: Check Current NSG Rules
        run: |
          echo "Checking current NSG rules..."
          az network nsg list --resource-group $RESOURCE_GROUP --output table
          
          echo ""
          echo "Current SSH rules in NSG:"
          az network nsg rule list --resource-group $RESOURCE_GROUP --nsg-name $NSG_NAME --query "[?destinationPortRange=='22']" --output table

      - name: Remove Existing GitHub SSH Rules
        run: |
          echo "Removing existing GitHub Actions SSH rules..."
          # Delete existing rule if it exists (ignore errors if it doesn't exist)
          az network nsg rule delete \
            --resource-group $RESOURCE_GROUP \
            --nsg-name $NSG_NAME \
            --name $SSH_RULE_NAME 2>/dev/null || echo "No existing rule to delete"
          
          # Also clean up any numbered rules from previous versions
          for i in {1..10}; do
            az network nsg rule delete \
              --resource-group $RESOURCE_GROUP \
              --nsg-name $NSG_NAME \
              --name "$SSH_RULE_NAME-$i" 2>/dev/null || true
          done

      - name: Create Updated SSH Rules for GitHub Actions
        run: |
          echo "Creating new SSH rules with updated GitHub Actions IP ranges..."
          
          # Create multiple rules for different IP chunks
          priority=1000
          rule_number=1
          
          for chunk_file in ip_chunk_*; do
            echo "Processing $chunk_file (Rule $rule_number)..."
            
            # Convert chunk to comma-separated list
            CHUNK_IPS=$(cat "$chunk_file" | tr '\n' ',' | sed 's/,$//')
            
            # Create rule name with number suffix
            if [ $rule_number -eq 1 ]; then
              RULE_NAME="$SSH_RULE_NAME"
            else
              RULE_NAME="$SSH_RULE_NAME-$rule_number"
            fi
            
            echo "Creating rule: $RULE_NAME with priority $priority"
            echo "IP ranges in this rule: $(cat "$chunk_file" | wc -l)"
            
            az network nsg rule create \
              --resource-group $RESOURCE_GROUP \
              --nsg-name $NSG_NAME \
              --name "$RULE_NAME" \
              --protocol Tcp \
              --direction Inbound \
              --priority $priority \
              --source-address-prefixes $CHUNK_IPS \
              --source-port-ranges '*' \
              --destination-address-prefixes '*' \
              --destination-port-ranges 22 \
              --access Allow \
              --description "SSH access for GitHub Actions runners (part $rule_number) - Auto-updated $(date +%Y-%m-%d)"
            
            # Increment for next rule
            priority=$((priority + 1))
            rule_number=$((rule_number + 1))
          done
          
          echo "Created $((rule_number - 1)) SSH rules for GitHub Actions"

      - name: Verify Updated Rules
        run: |
          echo "Verifying updated NSG rules..."
          echo ""
          echo "All SSH rules (port 22) in NSG:"
          az network nsg rule list \
            --resource-group $RESOURCE_GROUP \
            --nsg-name $NSG_NAME \
            --query "[?destinationPortRange=='22']" \
            --output table
          
          echo ""
          echo "Details of GitHub Actions SSH rule:"
          az network nsg rule show \
            --resource-group $RESOURCE_GROUP \
            --nsg-name $NSG_NAME \
            --name $SSH_RULE_NAME \
            --output json | jq '{name, priority, sourceAddressPrefixes, destinationPortRange, access, description}'

      - name: Test SSH Rule Functionality
        run: |
          echo "Testing if current runner IP is allowed..."
          
          # Get current runner's public IP
          RUNNER_IP=$(curl -s https://api.ipify.org)
          echo "Current GitHub Actions runner IP: $RUNNER_IP"
          
          # Count total IP ranges configured
          TOTAL_RANGES=$(cat github_ips.txt | wc -l)
          echo "Total GitHub Actions IP ranges configured: $TOTAL_RANGES"

      - name: Display Security Summary
        run: |
          echo "================================================"
          echo "🔒 NSG Security Update Complete!"
          echo "================================================"
          echo ""
          echo "Summary:"
          echo "  • Resource Group: $RESOURCE_GROUP"
          echo "  • NSG Name: $NSG_NAME"
          echo "  • Base Rule Name: $SSH_RULE_NAME"
          echo "  • Number of Rules Created: $CHUNK_COUNT"
          echo "  • Updated: $(date)"
          echo ""
          echo "Security Status:"
          echo "  ✅ SSH access restricted to GitHub Actions IP ranges only"
          echo "  ✅ Old rules removed and replaced with current ranges"
          echo "  ✅ Multiple rules created to handle all IP ranges"
          echo "  ✅ Rule priorities starting from 1000"
          echo ""
          echo "GitHub Actions IP Ranges:"
          echo "  • Total IP ranges: $(cat github_ips.txt | wc -l)"
          echo "  • Rules created: $CHUNK_COUNT"
          echo "  • Sample ranges:"
          head -5 github_ips.txt | sed 's/^/    /'
          echo ""
          echo "⚠️  Important Notes:"
          echo "  • This blocks SSH access from all other IPs"
          echo "  • Emergency access requires Azure Portal or CLI"
          echo "  • Rules update automatically weekly"
          echo ""
          echo "================================================"

      - name: Create Backup Emergency Rule (Optional)
        run: |
          echo "Note: If you need emergency SSH access from other IPs:"
          echo "1. Go to Azure Portal > Network Security Groups > $NSG_NAME"
          echo "2. Add temporary rule with higher priority (lower number)"
          echo "3. Remove temporary rule after emergency access"
          echo ""
          echo "CLI Emergency Access Example:"
          echo "az network nsg rule create --resource-group $RESOURCE_GROUP --nsg-name $NSG_NAME --name Emergency-SSH --priority 900 --source-address-prefixes YOUR_IP --destination-port-ranges 22 --access Allow"
